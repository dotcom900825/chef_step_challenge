<div class='container'>
  <div class='text-center logo'>
    <%= image_tag "logo.png", :width=>200%>
  </div>

  <div class='row'>
    <div class='col-md-4'>
      <h3>Question lists</h3>

      <ul class="list-group">
        <li class="list-group-item"><a href="#/">Q1</a></li>
        <li class="list-group-item"><a href="#/q2">Q2</a></li>
        <li class="list-group-item"><a href="#/q3">Q3</a></li>
        <li class="list-group-item"><a href="#/q4">Q4</a></li>
        <li class="list-group-item active"><a href="#/worker">Q5: worker.rb</a> </li>
        <li class="list-group-item"><a href="#/single_thread_solution">Q5: single_thread.rb</a></li>
        <li class="list-group-item"><a href="#/multi_threaded_solution">Q5: multi_thread.rb</a></li>
        <li class="list-group-item"><a href="#/discussion">Q5: Discussion</a></li>
      </ul>
    </div>

    <div class='col-md-8'>
      <h4 class='code-header-first'>worker.rb</h4>
      <section class='answer'>Here is my solution for the remove duplicate emails problem. I use a hash map to keep track of all the unique email addresses, and use a counter_index to help place those unique email addresses to the front of the array, and eventually trim the array and only return all the unique ones. <hr> Here is the solution source code Github repo: <a href="https://github.com/dotcom900825/remove_duplicate_email"> link</a></section>
      <snippet>
  class Worker

    attr_accessor :array

    def initialize(array)
      @array = array
    end

    def remove_duplicates
      counter_index = 0
      hash = Hash.new(false)

      @array.each do |email|
        if !hash[email]
          hash[email] = true
          @array[counter_index] = email
          counter_index += 1
        end
      end

      @array =  @array[0...counter_index]
    end
  end
      </snippet>
    </div>
  </div>
</div>